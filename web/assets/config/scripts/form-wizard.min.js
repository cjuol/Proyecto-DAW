var horas_min = $('#config_horasMin').val();
var FormWizard = function () {

    return {
        //main function to initiate the module
        init: function () {
            if (!jQuery().bootstrapWizard) {
                return;
            }

            var form = $('#form_config');
            var error = $('.alert-danger', form);
            var success = $('.alert-success', form);

            form.validate({
                doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                rules:{
                    'config[horasMin]':{
                        required: true,
                        number: true,
                        min: 0
                    },
                    'config[horasMax]':{
                        required:true,
                        number: true,
                        greaterThan: "#config_horasMin"
                    },
                },
                messages:{
                    'config[horasMin]':{
                        required: "Este campo es obligatorio",
                        number: "Introduzca un número",
                        min:jQuery.validator.format("Por favor, introduzca un valor mayor o igual que {0}.")
                    },
                    'config[horasMax]':{
                        required: "Este campo es obligatorio",
                        number: "Introduzca un número",
                        greaterThan:jQuery.validator.format("Por favor, introduzca un valor mayor que horas mínimas.")
                    }
                },

                errorPlacement: function (error, element) { // cambiar posicion del mensaje de error
                    if (element.attr("name") == "cuenta[imagen]") { // buscamos el field del formulario que queremos cambiar
                        error.insertAfter("#upload_logo");  //insertamos el error debajo del elemento seleccionado
                    } else {
                        error.insertAfter(element); // insertar el error debajo del elemento selecionado.
                    }
                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    success.hide();
                    error.show();
                    App.scrollTo(error, -200);
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    if (label.attr("for") == "gender" || label.attr("for") == "payment[]") { // for checkboxes and radio buttons, no need to show OK icon
                        label
                            .closest('.form-group').removeClass('has-error').addClass('has-success');
                        label.remove(); // remove error label here
                    } else { // display success icon for other inputs
                        label
                            .addClass('valid') // mark the current input as valid and display OK icon
                            .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                    }
                },

            });

            $('.button-submit').click(function(){
                if (form.valid() == false) {
                    return false;
                }else{
                    success.show();
                    error.hide();
                    form.submit();
                }
            });
        }

    };

}();

jQuery(document).ready(function() {
    FormWizard.init();
    $.validator.addMethod("greaterThan",
        function (value, element, param) {
            var $otherElement = $(param);
            return parseInt(value, 10) > parseInt($otherElement.val(), 10);
        });
});